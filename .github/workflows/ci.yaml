name: CI Tests

on: [push]

jobs:
  build:

    runs-on: self-hosted
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        # Semantic version range syntax or exact version of a Python version
        python-version: '3.x'
        # Optional - x64 or x86 architecture, defaults to x64
        architecture: 'x64'
    # You can test your matrix by printing the current Python version
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-integration.txt
        pip install -r requirements-unit.txt
    # Lint the python code using the Black formatter
#    - name: Lint
#      uses: psf/black@fcf97961061982656a1384ecc1628e217a52a88c
#      with:
#        args: ". --check"
    - name: Bring Server up
      run: |
        python3 -m flask run > /dev/null &
        while ! sudo lsof -Pi :5000 -sTCP:LISTEN -t; do sleep 1; done
      env:
        DATABASE_URL: 'sqlite:///web.db'
        SECRET_KEY: 'e9cac0f3f4Yd47a3be91d7b8f5'    
        FLASK_APP: web
        FLASK_RUN_PORT: 5000
    - name: Test with pytest
      run: |
        pytest unit_test
        pytest integration_test
      env:
        DATABASE_URL: 'sqlite:///web.db'
        SECRET_KEY: 'e9cac0f3f4Yd47a3be91d7b8f5'
  lint:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: psf/black@stable
        with:
          args: ". --check"
